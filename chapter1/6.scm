(define (new-if pred then-clause else-clause)
	(cond (pred then-clause)
		  (else else-clause)))
(define (sqrt-itr guess x)
	(if (good-enough? guess x)
	; (new-if (good-enough? guess x)
		guess
		(sqrt-itr (improve guess x)
				x)))
(define (improve guess x)
	(average guess (/ x guess)))
(define (average x y)
	(/ (+ x y) 2))
(define (good-enough? guess x)
	(< (abs (- (square guess) x)) 0.001))
(define (square x)
	(* x x))
(define (sqrt x)
	(sqrt-itr 1.0 x))
